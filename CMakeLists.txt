cmake_minimum_required(VERSION 3.16)

project(Taller_Vision_2 LANGUAGES CXX)

# Configuraci칩n de CMake para manejar autom치ticamente UIC, MOC y RCC en Qt (si fuera necesario)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

# Establecer el est치ndar de C++ a usar
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Encontrar las bibliotecas necesarias de OpenCV
find_package(OpenCV REQUIRED)

# Incluir directorios de OpenCV
include_directories(${OpenCV_INCLUDE_DIRS})

# Ejercicio 1: Generar ejecutable para punto1.cpp
add_executable(Ejercicio1 punto1.cpp)
target_link_libraries(Ejercicio1 ${OpenCV_LIBS})

# Ejercicio 2: Generar ejecutable para punto2.cpp
add_executable(Ejercicio2 punto2.cpp)
target_link_libraries(Ejercicio2 ${OpenCV_LIBS})

# Ejercicio 3: Generar ejecutable para punto3.cpp
add_executable(Ejercicio3 punto3.cpp)
target_link_libraries(Ejercicio3 ${OpenCV_LIBS})

# Ejercicio 4: Generar ejecutable para punto4.cpp
add_executable(Ejercicio4 punto4.cpp)
target_link_libraries(Ejercicio4 ${OpenCV_LIBS})

# Ejercicio 5: Generar ejecutable para punto5.cpp
add_executable(Ejercicio5 punto5.cpp)
target_link_libraries(Ejercicio5 ${OpenCV_LIBS})

# Ejercicio 6: Generar ejecutable para punto6.cpp
add_executable(Ejercicio6 punto6.cpp)
target_link_libraries(Ejercicio6 ${OpenCV_LIBS})

# Ejercicio 7: Generar ejecutable para punto7.cpp
add_executable(Ejercicio7 punto7.cpp)
target_link_libraries(Ejercicio7 ${OpenCV_LIBS})

# Opcional: Incluir instalaci칩n de los ejecutables
install(TARGETS Ejercicio1 Ejercicio2 Ejercicio3 Ejercicio4 Ejercicio5 Ejercicio6 Ejercicio7
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)
